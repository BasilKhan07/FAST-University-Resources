--CREATE TABLE PRODUCT_PRICE_HISTORY (
--    product_id INTEGER,
--    product_Name VARCHAR(20),
--    supplierName VARCHAR(20),
--    unit_price INTEGER);

--CREATE TABLE PRODUCT (
--    product_id INTEGER,
--    product_Name VARCHAR(20),
--    supplierName VARCHAR(20),
--    unit_price INTEGER);

--CREATE OR REPLACE TRIGGER PRICE_HISTORY_TRIGGER
--BEFORE UPDATE OF UNIT_PRICE ON PRODUCT
--FOR EACH ROW
--BEGIN
--INSERT INTO PRODUCT_PRICE_HISTORY
--VALUES(:OLD.PRODUCT_ID, :OLD.PRODUCT_NAME, :OLD.SUPPLIERNAME, :OLD.UNIT_PRICE);
--END;

--INSERT INTO PRODUCT VALUES(100, 'Laptop', 'HP', 2000);
--INSERT INTO PRODUCT VALUES(101, 'Laptop', 'DELL', 5000);

--UPDATE PRODUCT
--SET UNIT_PRICE = 3000
--WHERE PRODUCT_ID=101;

--CREATE TABLE PRODUCT_CHECK (
--    Message VARCHAR(50),
--    Current_Date date);


--CREATE OR REPLACE TRIGGER BEFORE_UPDATE_STAT_PRODUCT
--BEFORE UPDATE ON PRODUCT
--BEGIN
--INSERT INTO PRODUCT_CHECK VALUES('BEFORE UPDATE, STATEMENT LEVEL', SYSDATE);
--END;

--CREATE OR REPLACE TRIGGER BEFORE_UPDATE_ROW_PRODUCT
--BEFORE UPDATE ON PRODUCT
--FOR EACH ROW
--BEGIN
--INSERT INTO PRODUCT_CHECK VALUES('BEFORE UPDATE ROW LEVEL', SYSDATE);
--END;

--CREATE OR REPLACE TRIGGER AFTER_UPDATE_STAT_PRODUCT
--AFTER UPDATE ON PRODUCT
--BEGIN
--INSERT INTO PRODUCT_CHECK VALUES('AFTER UPDATE, STATEMENT LEVEL', SYSDATE);
--END;

--CREATE OR REPLACE TRIGGER AFTER_UPDATE_ROW_PRODUCT
--AFTER UPDATE ON PRODUCT
--FOR EACH ROW
--BEGIN
--INSERT INTO PRODUCT_CHECK VALUES('AFTER UPDATE ROW LEVEL', SYSDATE);
--END;

--UPDATE PRODUCT
--SET Unit_Price = 800
--WHERE PRODUCT_ID IN (100, 101);

--SELECT *
--FROM PRODUCT_CHECK;

--OUTPUT
--BEFORE UPDATE, STATEMENT LEVEL	20-DEC-22
--BEFORE UPDATE ROW LEVEL	20-DEC-22
--AFTER UPDATE ROW LEVEL	20-DEC-22
--BEFORE UPDATE ROW LEVEL	20-DEC-22
--AFTER UPDATE ROW LEVEL	20-DEC-22
--AFTER UPDATE, STATEMENT LEVEL	20-DEC-22